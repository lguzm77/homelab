---
networks:
  observability:
    ipam:
      config:
        - subnet: 172.32.0.0/16
volumes:
  grafana-storage: {}
  prometheus_data: {}
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus-config/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
  grafana:
    networks:
      observability:
        ipv4_address: 172.32.0.2
    image: grafana/grafana-oss:main
    container_name: grafana
    restart: unless-stopped
    ports: [3000:3000]
    volumes: [grafana-storage:/var/lib/grafana]
    environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana-http.rule=Host(`grafana.technolev.work`)
      - traefik.http.routers.grafana-http.entrypoints=http
      - traefik.http.services.grafana-http.loadbalancer.server.port=3000 # Route traffic to port 3000
      - traefik.http.routers.grafana-http.tls.certresolver=cloudflare
