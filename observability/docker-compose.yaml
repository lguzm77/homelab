---
networks:
  lev_network:
    external: true
volumes:
  grafana-storage: {}
  prometheus_data: {}
services:
  node_exporter:
    networks:
      lev_network:
        ipv4_address: 192.168.1.230
    container_name: node_exporter
  prometheus:
    networks:
      lev_network:
        ipv4_address: 192.168.1.229
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    expose: [9090]
  grafana:
    networks:
      lev_network:
        ipv4_address: 192.168.1.228
    image: grafana/grafana-oss:main
    container_name: grafana
    restart: unless-stopped
    ports: [3000:3000]
    volumes: [grafana-storage:/var/lib/grafana]
    environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana-http.rule=Host(`grafana.technolev.work`)
      - traefik.http.routers.grafana-http.entrypoints=http
      - traefik.http.services.grafana-http.loadbalancer.server.port=3000  # Route traffic to port 3000
