---
networks:
  lev_network:
    external: true  # we will create the network externally
volumes:
  grafana-storage: {}
services:
  traefik:
    image: traefik:v3.1.5
    container_name: traefik-reverse-proxy
    ports: [80:80, 8080:8080]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik-config/traefik.yaml:/etc/traefik/traefik.yaml
    networks:
      lev_network:
        ipv4_address: 192.168.1.227
    restart: unless-stopped
  unbound:
    container_name: unbound
    image: mvance/unbound-rpi:latest
    hostname: unbound
    networks:
      lev_network:
        ipv4_address: 192.168.1.226
    ports: [5335/tcp, 5335/udp]
    volumes: [./unbound-config/:/opt/unbound/etc/unbound/]  # custom unbound configuration
    environment:
      TZ: America/NEW_YORK
      ServerIP: 192.168.1.226
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:2025.02.4
    hostname: pihole
    domainname: lev
    mac_address: ec:ca:08:19:09:27
    dns: [127.0.0.1, 1.1.1.1]
    ports:
      # DNS Ports
      - 53:53/tcp
      - 53:53/udp
      # Default HTTP Port
      - 80:80/tcp
      # Default HTTPs Port. FTL will generate a self-signed certificate
      - 443:443/tcp
      # Uncomment the below if using Pi-hole as your DHCP Server
      - 67:67/udp
    networks:
      lev_network:
        ipv4_address: 192.168.1.225  # IP of the pihole container 
    environment:
      TZ: America/NEW_YORK
      FTLCONF_LOCAL_IPV4: 192.168.1.225  # must match with pihole.networks.pihole_network.ipv4_address
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      FTLCONF_webserver_domain: technolev.lan
      FTLCONF_dns_upstreams: 192.168.1.226#5335
      FTLCONF_dns_dnssec: true
      FTLCONF_dhcp_active: true
      FTLCONF_dhcp_start: 192.168.1.6
      FTLCONF_dhcp_end: 192.168.1.224
      FTLCONF_dhcp_router: 192.168.1.1
      FTLCONF_dns_listeningMode: all
    depends_on: [unbound]
    volumes: [./etc-pihole:/etc/pihole]
    cap_add:
      - NET_ADMIN  # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
